<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
		
	<!-- 三种获得配置文件的方式 -->
	<!-- 第一种：location="classpath:db.properties"或location="db.properties"都可以 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 第二种 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="db.properties"/>
	</bean>
	<!-- 第三种：在java代码中通过getBean("config")来获得Properties对象的实例 -->
	<util:properties id="config" location="classpath:db.properties" />
	
	<!-- 通过获得配置文件内容来配置连接池 -->
	<bean name="dataSourceCustom" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driver" value="${db.driver}"/>
		<property name="url" value="${db.url}"/>
		<property name="username" value="${db.user}"/>
		<property name="password" value="${db.pwd}"/>
	</bean>
</beans>
